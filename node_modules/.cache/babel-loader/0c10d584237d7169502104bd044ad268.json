{"ast":null,"code":"'use strict';\n/** @module massive */\n\nconst Database = require('./lib/database');\n/**\n * Connect to Postgres and initialize the data mapper.\n *\n * @param {Object|String} connection - Connection configuration object, or\n * connection string.\n * @param {Object} [loader={}] - Change Massive's startup parameters. To\n * blacklist or whitelist a schema or entity, provide its fully qualified name\n * (eg myschema.mytable) as an array value or member in a comma-separated list.\n * @param {Array|String} loader.blacklist - Omit specified tables and views.\n * @param {Array|String} loader.whitelist - Omit all but the specified tables\n * and views.\n * @param {Array|String} loader.functionBlacklist - Omit specified functions.\n * @param {Array|String} loader.functionWhitelist - Omit all but the specified\n * functions.\n * @param {Array|String} loader.allowedSchemas - Only load entities in the\n * specified schemata.\n * @param {Array|String} loader.exceptions - Omit specified tables and views.\n * @param {String} loader.scripts - Define the scripts directory relative to the\n * process working directory.\n * @param {Object} [driverConfig={}] - Pass configuration directly to\n * pg-promise.\n *\n * @return {Database} An initialized and connected data mapper.\n */\n\n\nmodule.exports = (connection, loader = {}, driverConfig = {}) => {\n  return new Database(connection, loader, driverConfig).reload();\n};\n/**\n * A database connection.\n */\n\n\nmodule.exports.Database = Database;","map":null,"metadata":{},"sourceType":"script"}