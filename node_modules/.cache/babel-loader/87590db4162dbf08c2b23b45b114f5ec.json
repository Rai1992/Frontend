{"ast":null,"code":"'use strict';\n\nconst os = require('os'); //////////////////////////////////////\n// Returns the End-Of-Line from text.\n\n\nfunction getEOL(text) {\n  let idx = 0,\n      unix = 0,\n      windows = 0;\n\n  while (idx < text.length) {\n    idx = text.indexOf('\\n', idx);\n\n    if (idx === -1) {\n      break;\n    }\n\n    if (idx > 0 && text[idx - 1] === '\\r') {\n      windows++;\n    } else {\n      unix++;\n    }\n\n    idx++;\n  }\n\n  if (unix === windows) {\n    return os.EOL;\n  }\n\n  return unix > windows ? '\\n' : '\\r\\n';\n} ///////////////////////////////////////////////////////\n// Returns {line, column} of an index within the text.\n\n\nfunction getIndexPos(text, index, eol) {\n  let lineIdx = 0,\n      colIdx = index,\n      pos = 0;\n\n  do {\n    pos = text.indexOf(eol, pos);\n\n    if (pos === -1 || index < pos + eol.length) {\n      break;\n    }\n\n    lineIdx++;\n    pos += eol.length;\n    colIdx = index - pos;\n  } while (pos < index);\n\n  return {\n    line: lineIdx + 1,\n    column: colIdx + 1\n  };\n} ///////////////////////////////////////////\n// Returns a space gap for console output.\n\n\nfunction messageGap(level) {\n  return ' '.repeat(level * 4);\n}\n\nmodule.exports = {\n  getEOL,\n  getIndexPos,\n  messageGap\n};","map":null,"metadata":{},"sourceType":"script"}