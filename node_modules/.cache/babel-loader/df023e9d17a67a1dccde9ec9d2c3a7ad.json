{"ast":null,"code":"'use strict';\n\nconst glob = require('glob');\n\nconst path = require('path');\n\nconst pgp = require('pg-promise');\n\nconst patterns = require('pg-promise/lib/patterns');\n\nconst loadedFiles = [];\n\nexports = module.exports = db => new Promise((resolve, reject) => {\n  glob(\"\".concat(db.loader.scripts, \"/**/*.sql\"), (err, files) => {\n    if (err) {\n      reject(err);\n    } else {\n      resolve(files);\n    }\n  });\n}).then(files => files.map(f => {\n  const extant = loadedFiles.find(qf => qf.file === f);\n  const script = {\n    schema: path.relative(db.loader.scripts, path.dirname(f)).replace(path.sep, '.'),\n    name: path.basename(f, '.sql'),\n    sql: extant || new pgp.QueryFile(f, {\n      minify: true\n    })\n  };\n\n  if (!extant) {\n    loadedFiles.push(script.sql);\n  }\n\n  const rawSQL = script.sql[pgp.as.ctf.toPostgres]();\n  const valuesMatch = rawSQL.match(patterns.multipleValues);\n  const namesMatch = rawSQL.match(patterns.namedParameters);\n  script.arity = (valuesMatch && valuesMatch.length || 0) + (namesMatch && namesMatch.length || 0);\n  return script;\n}));","map":null,"metadata":{},"sourceType":"script"}