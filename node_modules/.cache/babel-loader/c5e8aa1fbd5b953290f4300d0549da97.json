{"ast":null,"code":"'use strict';\n\nvar npm = {\n  read: require('./read')\n};\n/**\r\n * @namespace stream\r\n * @description\r\n * Namespace with methods that implement stream operations, and {@link stream.read read} is the only method currently supported.\r\n *\r\n * **Synchronous Stream Processing**\r\n *\r\n * ```js\r\n * var stream = require('spex')(Promise).stream;\r\n * var fs = require('fs');\r\n *\r\n * var rs = fs.createReadStream('values.txt');\r\n *\r\n * function receiver(index, data, delay) {\r\n *    console.log('RECEIVED:', index, data, delay);\r\n * }\r\n *\r\n * stream.read(rs, receiver)\r\n *     .then(function (data) {\r\n *         console.log('DATA:', data);\r\n *     })\r\n *     .catch(function (error) {\r\n *         console.log('ERROR:', error);\r\n *     });\r\n * ```\r\n *\r\n * **Asynchronous Stream Processing**\r\n *\r\n * ```js\r\n * var stream = require('spex')(Promise).stream;\r\n * var fs = require('fs');\r\n *\r\n * var rs = fs.createReadStream('values.txt');\r\n *\r\n * function receiver(index, data, delay) {\r\n *    return new Promise(function (resolve) {\r\n *        console.log('RECEIVED:', index, data, delay);\r\n *        resolve();\r\n *    });\r\n * }\r\n *\r\n * stream.read(rs, receiver)\r\n *     .then(function (data) {\r\n *         console.log('DATA:', data);\r\n *     })\r\n *     .catch(function (error) {\r\n *         console.log('ERROR:', error);\r\n *    });\r\n * ```\r\n *\r\n * @property {function} stream.read\r\n * Consumes and processes data from a $[Readable] stream.\r\n *\r\n */\n\nmodule.exports = function (config) {\n  var res = {\n    read: npm.read(config)\n  };\n  Object.freeze(res);\n  return res;\n};","map":null,"metadata":{},"sourceType":"script"}