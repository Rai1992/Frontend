{"ast":null,"code":"/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\n'use strict';\n/**\r\n * @enum {number}\r\n * @alias queryResult\r\n * @readonly\r\n * @description\r\n * **Query Result Mask**\r\n *\r\n * Binary mask that represents the result expected from queries.\r\n * It is used by the base {@link Database#query query} method, as well as method {@link Database#func func}.\r\n *\r\n * The mask is always the last optional parameter, which defaults to `queryResult.any`.\r\n *\r\n * Any combination of flags is supported, except for `one + many`.\r\n *\r\n * The type is available from the library's root: `pgp.queryResult`.\r\n *\r\n * @see {@link Database#query Database.query}, {@link Database#func Database.func}\r\n */\n\nconst queryResult = {\n  /** Single row is expected, to be resolved as a single row-object. */\n  one: 1,\n\n  /** One or more rows expected, to be resolved as an array with at least 1 row-object. */\n  many: 2,\n\n  /** Expecting no rows, to be resolved with `null`. */\n  none: 4,\n\n  /** `many|none` - any result is expected, to be resolved with an array of rows-objects. */\n  any: 6\n};\nObject.freeze(queryResult);\nmodule.exports = queryResult;","map":null,"metadata":{},"sourceType":"script"}